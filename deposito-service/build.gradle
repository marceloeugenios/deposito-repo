plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "com.palantir.docker" version "0.33.0"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id "com.avast.gradle.docker-compose" version "0.16.4"
}

group = 'br.com.desafio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.named("bootJar") {
    enabled = true
    mainClass = 'br.com.magis5.deposito.DepositoServicoApplication'
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.keycloak:keycloak-spring-boot-starter:20.0.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
    implementation 'org.flywaydb:flyway-core'

    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testRuntimeOnly 'org.postgresql:postgresql'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

tasks.named("test") {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

dockerCompose {
    useComposeFiles = ['docker-compose-dev.yml']
    isRequiredBy(project.tasks.test)
}

jacocoTestReport {
    dependsOn build

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/DepositoServicoApplication.*",
                    "**/*Autenticacao*.*",
                    "**/*config/*.*",
                    "**/*error/*.*"
            ])
        }))
    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

gitProperties {
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    keys = ['git.branch',
            'git.commit.id',
            'git.commit.id.abbrev',
            'git.commit.time',
            'git.commit.user.name',
            'git.commit.user.email',
            'git.commit.message.short',
            'git.commit.time',
            'git.build.version',
            'git.build.user.name',
            'git.build.user.email']
}

docker {
    dependsOn test
    name "marceloeugenios/deposito-app:latest"
    files "deposito-service-${version}.jar"
    tag 'DockerHub', "marceloeugenios/deposito-app:latest"
}

dockerPrepare {
    dependsOn bootJar
    from "build/libs/deposito-service-${version}.jar"
    into '.'
}